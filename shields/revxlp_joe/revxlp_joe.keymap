/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/backlight.h>

#include "./helpers/keypos_42keys.h"

#define SYM_L 1
#define NUM_L 2
#define MED_L 3

#define LEFT_HAND = LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5
#define RIGHT_HAND = RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5
#define THUMBS = LH0 LH1 LH2 RH0 RH1 RH2 

#define HYPER LC(LS(LA(LGUI)))     // hyper key
#define TAB_RT      LC(TAB)        // alt window tab right
#define TAB_LT      LC(LS(TAB))    // alt window tab left
#define INT_EUR     RA(N5)         // symbol eur

/ {
    tap_dances {
      td_q_esc: td_q_esc {
        compatible = "zmk,behavior-tap-dance";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp Q>, <&kp ESC>; 
      };
    };

    behaviors {
        // REF: https://github.com/folke/zmk-config/blob/main/config/includes/mods.dtsi
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            hold-trigger-key-positions = <RIGHT_HAND THUMBS>;
            hold-trigger-on-release;
            // global-quick-tap-ms = <150>;         // requires PR #1387
            // global-quick-tap;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            hold-trigger-key-positions = <LEFT_HAND THUMBS>;
            hold-trigger-on-release;
            // global-quick-tap-ms = <150>;         // requires PR #1387
            // global-quick-tap;
        };

        blp: bootloader_long_press {
            compatible = "zmk,behavior-hold-tap";
            label = "BOOTLOADER_LONG_PRESS";
            #binding-cells = <2>;
            bindings = <&bootloader>, <&none>;
            tapping-term-ms = <3000>;
        };
    };

    cond_layers {
        compatible = "zmk,conditional-layers";
        tri {
          if-layers = <NUM_L SYM_L>;
          then-layer = <MED_L>;
        };
    };

    combos {
        compatible = "zmk,combos";
        bootloader_combo {
            timeout-ms = <50>;
            key-positions = <5 6>;
            bindings = <&bootloader>;
            layers = <MED_L>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty_layer {
            label = "Qwerty";
            bindings = <
&none  &td_q_esc       &kp W            &kp E               &kp R              &kp T           &kp Y            &kp U              &kp I           &kp O              &kp P          &none
&none  &hml LGUI A     &hml LALT S      &hml LCTRL D        &hml LSHFT F       &kp G           &kp H            &hmr LSHFT J       &hmr LCTRL K    &hmr LALT L        &hmr LGUI SEMI &none
&none  &kp Z           &kp X            &kp C               &kp V              &kp B           &kp N            &kp M              &kp COMMA       &kp DOT            &kp SLASH      &none
                                        &lt SYM_L ESC       &lt NUM_L TAB      &lt SYM_L SPACE &lt NUM_L BSPC   &lt SYM_L RET      &lt NUM_L DEL
            >;
        };

        sym_layer {
            label = "Symbol";
            bindings = <
&trans &kp QUESTION    &kp LESS_THAN    &kp AT             &kp GREATER_THAN    &kp GRAVE       &kp AMPERSAND    &kp LEFT_BRACKET  &kp PIPE        &kp RIGHT_BRACKET &kp HASH         &trans
&trans &hml LGUI SQT   &hml LALT CARET  &hml LCTRL PERCENT &hml LSHFT DOLLAR   &kp PLUS        &kp MINUS        &hmr LSHFT LPAR   &hmr LCTRL COLON &hmr LALT RPAR   &hmr LGUI DOLLAR &trans
&trans &kp EXCLAMATION &kp SLASH        &kp ASTERISK       &kp BACKSLASH       &kp TILDE       &kp EQUAL        &kp LBRC          &kp SEMICOLON   &kp RBRC          &kp INT_EUR      &trans
                                        &trans             &trans              &trans          &trans           &trans            &trans
            >;
        };

        num_layer {
            label = "Number";
            bindings = <
&trans &kp PLUS        &kp N7           &kp N8             &kp N9              &trans          &trans           &trans            &kp COMMA        &kp DOT          &kp ASTERISK     &trans
&trans &hml LGUI MINUS &hml LALT N4     &hmr LCTRL N5      &hml LSHFT N6       &trans          &kp LARW         &hmr LSHFT DARW   &hmr LCTRL UARW  &hmr LALT RARW   &kp SLASH        &trans
&trans &kp EQUAL       &kp N1           &kp N2             &kp N3              &kp N0          &kp HOME         &kp PG_DN         &kp PG_UP        &kp END          &kp EQUAL        &trans
                                        &trans             &trans              &trans          &lt SYM_L DEL    &trans            &trans
            >;
        };

        media_layer {
            label = "Media";
            bindings = <
&trans &blp 0 0       &kp F7            &kp F8              &kp F9             &kp F10         &trans           &trans            &trans           &trans           &trans           &trans
&trans &trans         &hml LALT F4      &hml LCTRL F5       &hml LSHFT F6      &kp F11         &kp C_PREV       &hmr LSHFT C_VOL_DN &hmr LCTRL C_VOL_UP &hmr LALT C_NEXT &trans      &trans
&trans &trans         &kp F1            &kp F2              &kp F3             &kp F12         &kp PSCRN        &kp C_PLAY_PAUSE  &kp C_MUTE       &trans           &trans           &trans
                                        &trans              &trans             &trans          &trans           &trans            &trans
            >;
        };
    };
};
